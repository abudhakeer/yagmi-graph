// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Goal extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Goal entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type Goal must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("Goal", id.toString(), this);
    }
  }

  static load(id: string): Goal | null {
    return changetype<Goal | null>(store.get("Goal", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get _goalId(): BigInt {
    let value = this.get("_goalId");
    return value!.toBigInt();
  }

  set _goalId(value: BigInt) {
    this.set("_goalId", Value.fromBigInt(value));
  }

  get _goalTitle(): string {
    let value = this.get("_goalTitle");
    return value!.toString();
  }

  set _goalTitle(value: string) {
    this.set("_goalTitle", Value.fromString(value));
  }

  get _goalDesc(): string {
    let value = this.get("_goalDesc");
    return value!.toString();
  }

  set _goalDesc(value: string) {
    this.set("_goalDesc", Value.fromString(value));
  }

  get _setterAddress(): string {
    let value = this.get("_setterAddress");
    return value!.toString();
  }

  set _setterAddress(value: string) {
    this.set("_setterAddress", Value.fromString(value));
  }

  get _partnerAddress(): string {
    let value = this.get("_partnerAddress");
    return value!.toString();
  }

  set _partnerAddress(value: string) {
    this.set("_partnerAddress", Value.fromString(value));
  }

  get _amount(): BigInt {
    let value = this.get("_amount");
    return value!.toBigInt();
  }

  set _amount(value: BigInt) {
    this.set("_amount", Value.fromBigInt(value));
  }

  get _dueDate(): BigInt {
    let value = this.get("_dueDate");
    return value!.toBigInt();
  }

  set _dueDate(value: BigInt) {
    this.set("_dueDate", Value.fromBigInt(value));
  }

  get _powUrl(): string {
    let value = this.get("_powUrl");
    return value!.toString();
  }

  set _powUrl(value: string) {
    this.set("_powUrl", Value.fromString(value));
  }

  get _powStatus(): string {
    let value = this.get("_powStatus");
    return value!.toString();
  }

  set _powStatus(value: string) {
    this.set("_powStatus", Value.fromString(value));
  }
}
